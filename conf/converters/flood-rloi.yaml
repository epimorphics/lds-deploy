# dclib template for converting RLOI station data to RDF

type : Composite
name : flood.rloiImport
requiredColumns:
  - telemetry_id
  - x_coord_actual
  - y_coord_actual
  - wiski_id
  - wiski_river_name
  - rloi_id
  - stage_datum
   # Others but that should be enough as a check

prefixes:
  rt : "http://environment.data.gov.uk/flood-monitoring/def/core/"

sources:
  - sourceType : CSV
    name       : stationIDMap
    source     : "flood/stationID.csv"
    key        : id
    value      : preferred
    makeURI    : false

bind :
    - "$base"           : "http://environment.data.gov.uk/flood-monitoring/id/stations"
      "$region"         : "{region.toLowerCase().replaceAll(' ', '_')}"
      "$tid"            : "{telemetry_id.replaceAll(' ', '_').replaceAll('/', '_')}"
    - "$stub"           : "{$tid}-{$region}"
    - "$idfrag"         : "{$stub.map('stationIDMap')}"
    - "$idfrag"         : "{empty($idfrag) ? $tid : $idfrag}"
    - "$id"             : "{$base}/{$idfrag}"
      "$point"          : "{empty(x_coord_actual) || empty(y_coord_actual) ? null : fromEastingNorthing(x_coord_actual, y_coord_actual)}"
    - "$stageScale"     : "{$id}/stageScale"
      "$downstageScale" : "{type == 'M' ? $id.append('/downstageScale') : null}"
templates:
  - flood.rloi.base
  - flood.rloi.otherType
referenced:

  - name : flood.rloi.base
    type : Composite
    bind :
      - "$offset"   : "{post_process == 'Y' ? subtract : null}"
    prefixes :
       spatial : "http://data.ordnancesurvey.co.uk/ontology/spatialrelations/"
       geo:      "http://www.w3.org/2003/01/geo/wgs84_pos#"

    templates:
      - "@id"                   : "<{$id}>"
        "<rdf:type>"            : "<rt:Station>"
        "<rt:wiskiID>"          : "{wiski_id.asString()}"
        "<rt:RLOIid>"           : "{rloi_id.asString()}"
        "<rt:stationReference>" : "{telemetry_id.asString()}"
        "<skos:notation>"       : "{$idfrag}"
        "<rdfs:label>"          : "{external_name}"
        "<rt:datumOffset>"      : "{$offset}"
        "<rt:catchmentName>"    : "{catchment}"
        "<rt:town>"             : "{location_info}"
        "<rt:riverName>"        : "{wiski_river_name}"
        "<rt:eaRegionName>"     : "{region}"
        "<rt:eaAreaName>"       : "{region} - {area}"
        "<spatial:easting>"     : "{x_coord_actual}"
        "<spatial:northing>"    : "{y_coord_actual}"
        "<geo:lat>"             : "{empty($point) ? null : $point.latLiteral}"
        "<geo:long>"            : "{empty($point) ? null : $point.lonLiteral}"
        "<rt:gridReference>"    : "{actual_ngr}"
        "<rt:dateOpened>"       : "{date_open.asDate('dd/MM/yyyy','xsd:date')}"
        "<rt:stageScale>"       : "<{$stageScale}>"
        "<rt:downstageScale>"   : "<{$downstageScale}>"

      - type : Let
        bind :
          "$scale" : "{$stageScale}"
          "$rangeLow"   : "{_95_tile}"
          "$rangeHigh"  : "{_5_tile}"
          "$datum"      : "{empty(stage_datum) || stage_datum == 'Not Available' ? null : stage_datum}"


          "$minDate"    : "{date_por_min}"
          "$minTime"    : "{time_por_min}"
          "$minValue"   : "{por_min_value}"

          "$maxDate"    : "{date_por_max}"
          "$maxTime"    : "{time_por_max}"
          "$maxValue"   : "{por_max_value}"

          "$highDate"   : "{date}"
          "$highTime"   : "{time}"
          "$highValue"  : "{highest_level}"
        template: flood.rloi.scale

      - type : Let
        onlyIf : "{type == 'M'}"
        bind :
          "$scale" : "{$downstageScale}"
          "$rangeLow"   : "{d_95_tile}"
          "$rangeHigh"  : "{d_5_tile}"
          "$datum"      : "{empty(d_stage_datum) || d_stage_datum.toLowerCase() == 'not available' ? null : d_stage_datum}"

          "$minDate"    : "{d_date_por_min}"
          "$minTime"    : "{d_time_por_min}"
          "$minValue"   : "{d_por_min_value}"

          "$maxDate"    : "{d_date_por_max}"
          "$maxTime"    : "{d_time_por_max}"
          "$maxValue"   : "{d_por_max_value}"

          "$highDate"    : "{d_date}"
          "$highTime"    : "{d_time}"
          "$highValue"   : "{d_highest_level}"
        template: flood.rloi.scale

  - name : flood.rloi.otherType
    type : Composite
    bind :
      - "$type" : "{type == 'S' ? 'rt:SingleLevel' : type == 'C' ? 'rt:Coastal' : type == 'M' ? 'rt:MultiTraceLevel' : null}"
    templates:
      - "@id"            : "<{$id}>"
        "<rdf:type>"     : "<{$type}>"

  - name : flood.rloi.scale
    type : Composite
    templates:
      - "@id"                    : "<{$scale}>"
        "<rt:scaleMax>"          : "{site_max}"
        "<rt:typicalRangeLow>"   : "{empty($rangeLow) || $rangeLow.toLowerCase() == 'not available' ? null : $rangeLow}"
        "<rt:typicalRangeHigh>"  : "{empty($rangeHigh) || $rangeHigh.toLowerCase() == 'not available' ? null : $rangeHigh}"
        "<rt:datum>"             : "{$datum}"

      - type : Let
        name : flood.rloi.scale.1
        onlyIf : "{!empty($minValue) && $minValue.toLowerCase() != 'not available'}"
        bind :
          "$recordType" : "minOnRecord"
          "$value"      : "{$minValue}"
          "$date"       : "{$minDate}"
          "$time"       : "{$minTime}"
        template : flood.rloi.scaleRecord

      - type : Let
        name : flood.rloi.scale.2
        onlyIf : "{!empty($maxValue) && $maxValue.toLowerCase() != 'not available'}"
        bind :
          "$recordType" : "maxOnRecord"
          "$value"      : "{$maxValue}"
          "$date"       : "{$maxDate}"
          "$time"       : "{$maxTime}"
        template : flood.rloi.scaleRecord

      - type : Let
        name : flood.rloi.scale.3
        onlyIf : "{!empty($highValue) && $highValue.toLowerCase() != 'not available'}"
        bind :
          "$recordType" : "highestRecent"
          "$value"      : "{$highValue}"
          "$date"       : "{$highDate}"
          "$time"       : "{$highTime}"
        template : flood.rloi.scaleRecord

  - name   : flood.rloi.scaleRecord
    type   : Composite
    onlyIf : "{!empty($value) && $value.toLowerCase() != 'not available'}"
    bind:
      - "$$time"  : "{empty($time) || $time.toLowerCase() == 'not available' ? '00:00:00' : $time}"
      - "$$date"  : "{empty($date) || $date.toLowerCase() == 'not available' ? null : $date.toString() + ' ' + $$time.toString()}"
    template :
      "name"  : flood.rloi.scaleRecord.1
      "@id"                    : "<{$scale}/{$recordType}>"
      "<rt:value>"             : "{$value}"
      "<rt:dateTime>"          : "{empty($$date) ? null : $$date.asDate('dd/MM/yyyy HH:mm:ss','xsd:dateTime')}"
      "^<rt:{$recordType}>"    : "<{$scale}>"
