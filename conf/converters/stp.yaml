###############################################################################################################
# @@TODO's
#
# 3: rationalise dump file name
# 4: check source file referencing
# 5: Check/replace sp-to-bw map (based on RDF using output from sites transformation)
#
###############################################################################################################

{
    type : "Composite",
    "name" : "bwq-short-term-pollution-risk-prediction",
    "requiredColumns" : [ 
         "site",
         "datetime",
         "prediction",
         "prediction_text_en"
#         "Prediction_text_cy"
         ],
    "bind" : [
        {
            "$source_base"        : "http://environment.data.gov.uk/sources/bwq",
            "$data_base"          : "http://environment.data.gov.uk/data/bathing-water-quality",
            "$body_slug"          : "eaew",
            "$body_org"           : "http://reference.data.gov.uk/id/public-body/environment-agency",
            "$def_bw"             : "http://environment.data.gov.uk/def/bathing-water",
            "$def_sp"             : "http://location.data.gov.uk/def/ef/SamplingPoint",
            "$def_stp"            : "http://environment.data.gov.uk/def/bwq-stp",
            "$id_bw"              : "http://environment.data.gov.uk/id/bathing-water",
            "$so_sp"              : "http://location.data.gov.uk/so/ef/SamplingPoint/bwsp.eaew",
            "$so_env"             : "http://location.data.gov.uk/so/common/Envelope/bwpf.eaew",
            "$so_zoi"             : "http://location.data.gov.uk/so/ef/ZoneOfInfluence/bwzoi.eaew",
            "$bwspid"             : "{site.format('%05d')}",
            "$pubDateTime"        : "{$exectime.asDate('xsd:dateTime').toWholeSeconds().toLocalTime()}",
            "$predictionDateTime" : "{datetime.asDate('yyyy-MM-dd\\'T\\'hh:mm:ss|yyyy-MM-dd\\'T\\'hh:mm:ssZZ|yyyy-MM-dd\\'T\\'HH:mm:ssZ','xsd:dateTime').toLocalTime()}",
            "$expiresDateTime"    : "{$predictionDateTime.plus(23,59,0)}",
            "$ns"                 : "{= asResource($$).replaceAll('#$','') }"
        }, 
        {
############################################################################################################            
# The following expression is a monster because I couldn't get format('%1tY%1tM%1td-%1tH%1tm%1ts') to work.
############################################################################################################
#            "$pubDateTimeSlug" : 
#                 "{$pubDateTime.year.format('%04d')}{$pubDateTime.month.format('%02d')}{$pubDateTime.day.format('%02d')}-{$pubDateTime.hour.format('%02d')}{$pubDateTime.minute.format('%02d')}{$pubDateTime.fullSecond.format('%02d')}",
            "$pubDateTimeSlug" : "{$pubDateTime.format('yyyyMMdd-HHmmss')}",
            "$stpDataset"      : "{$data_base}/stp-risk-prediction",
            "$bodyStpDataset"  : "{$data_base}/{$body_slug}/stp-risk-prediction"
        },{
            "$incrementalStpDataset" : "{$bodyStpDataset}/dataset-increment/{$pubDateTimeSlug}",
            # Allow missing bathing waters through so e.g. NRW sites don't break EA conversions
            "$bathing_water"   : "<{$bwspid.map('bwq-sp-to-bw', 'value', false)}>"
        }
    ],
############################################################################################################
# Temporary Map source for mapping sampling-point codes to bathing water URI
############################################################################################################

# @@TODO 5: Possibly replace with some LDS-BWQ infrastructure map (several transforms will need it).
 
    "sources" : [
       # { "name"       : "sp-to-bw",
       #   "sourceType" : "RDF",
       #   "source"     : "sites.ttl",
       #   "key"        : "<skos:notation>",
       #   "value"      : "<def-bw:bathingWater>",
       #   "type"       : "<def-sp:SamplingPoint>",
       #   "makeURI"    : true
       # }
    ],
    "oneOffs" : [
       { "name"              : "bwq-stp-dataset" ,
         "@id"               : "<{$stpDataset}>" ,
         "<rdf:type>"        : ["<void:Dataset>", "<qb:DataSet>", "<def-stp:RiskPredictionDataSet>" ],
         "<rdfs:label>"      : "Bathing Water Quality Short Term Pollution Risk Prediction@en" ,
         "<dct:description>" : "Top level dataset recording predictions of short term pollution risk, typically due to rainfall, associated with designated bathing waters in the UK.@en",
         "<dct:license>"     : "<http://reference.data.gov.uk/id/open-government-licence>",
         "<qb:structure>"    : "<def-stp:riskDsd>",
         "<void:subset>"     : "<{$bodyStpDataset}>",
         "<void:uriRegexPattern>" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/(.*)",
         "<void:vocabulary>"      : [ "<{$ns.apply('dgu:'     )}>", 
                                      "<{$ns.apply('def-bwq:' )}>", 
                                      "<{$ns.apply('skos:'    )}>",
                                      "<{$ns.apply('def-bw:'  )}>",
                                      "<{$ns.apply('def-sp:'  )}>",
                                      "<{$ns.apply('def-stp:' )}>",
                                      "<{$ns.apply('qb:'      )}>" ]
       },{
         "name"              : "bwq-body-stp-dataset",
         "@id"               : "<{$bodyStpDataset}>",
         "<rdf:type>"        : [ "<void:Dataset>", "<qb:DataSet>", "<def-stp:RiskPredictionDataSet>" ],
         "<rdfs:label>"      : "Bathing Water Quality Short Term Pollution Risk Prediction Dataset - ({$body_slug})@en" ,
         "<dct:description>" : "Dataset recording recording predictions of short term pollution risk, typically due to rainfall, associated with designated bathing waters monitored by a monitoring body - ({$body_slug})@en",
         "<dct:license>"     : "<http://reference.data.gov.uk/id/open-government-licence>",
         "<qb:structure>"    : "<def-stp:riskDsd>",
         "<void:uriRegexPattern>" : "http://environment.data.gov.uk/data/bathing-water-quality/stp-risk-prediction/(.*)",
         "<dct:publisher>"   : "<{$body_org}>",
         "<void:vocabulary>" : [ "<{$ns.apply('dgu:')}>", 
                                   "<{$ns.apply('def-bwq:')}>", 
                                   "<{$ns.apply('skos:'   )}>",
                                   "<{$ns.apply('def-bw:' )}>",
                                   "<{$ns.apply('def-sp:' )}>",
                                   "<{$ns.apply('def-stp:')}>",
                                   "<{$ns.apply('qb:')    }>" ],
         "<dct:modified>"    : "{$pubDateTime}",
         "<void:subset>"     : "<{$incrementalStpDataset}>"
       },{
         "name"              : "bwq-incremental-stp-dataset",
         "@id"               : "<{$incrementalStpDataset}>",
         "<rdf:type>"        : [ "<void:Dataset>" ],
         "<rdfs:label>"      : "Bathing Water Quality - short-term pollution risk prediction incremental dataset - ({$body_slug} {$pubDateTime})@en" ,
         "<dct:description>" : "Incremental short-term pollution risk prediction dataset - ({$body_slug}  {$pubDateTime})@en",
         "<dct:license>"     : "<http://reference.data.gov.uk/id/open-government-licence>",
         "<dct:publisher>"   : "<{$body_org}>",
         "<void:vocabulary>" : [ "<{$ns.apply('dgu:')}>", 
                                   "<{$ns.apply('def-bwq:')}>", 
                                   "<{$ns.apply('skos:'   )}>",
                                   "<{$ns.apply('def-bw:' )}>",
                                   "<{$ns.apply('def-sp:' )}>",
                                   "<{$ns.apply('def-stp:')}>",
                                   "<{$ns.apply('qb:')    }>" ],
         "<dct:modified>"    : "{$pubDateTime}",
# @@TODO 3: rationalise dump file name
         "<void:dataDump>"   : "<{$source_base}/{$body_slug}/output/{$filebasename}-{$pubDateTime}.ttl>"
       }
    ],
 ##########################################################################################################
 # Main STP conversion template.
 ##########################################################################################################
    "templates" : [ "bwq-stp" ] ,
    "referenced" : [
       { "name" : "bwq-stp",
         "@id"  : "<{$stpDataset}/point/{$bwspid}/date/{$pubDateTimeSlug}>",
         "<rdf:type>"             : "<{$def_stp}/RiskPrediction>",
         "<def-stp:publishedAt>"  : "{$pubDateTime}",
         "<def-stp:predictedAt>"  : "{$predictionDateTime}",
         "<def-stp:predictedOn>"  : "{$predictionDateTime.format('yyyy-MM-dd').asDate('yyyy-MM-dd','xsd:date')}",
         "<def-stp:expiresAt>"    : "{$expiresDateTime}",
         "<def-stp:riskLevel>"    : "<{prediction.value == 0 ? $def_stp.append('/unknown') :
                                       prediction.value == 1 ? $def_stp.append('/normal')  :
                                       prediction.value == 2 ? $def_stp.append('/increased') : null}>",
         "<def-stp:samplingPoint>": "<{$so_sp}/{$bwspid}>",
         "<def-stp:bathingWater>" : "{$bathing_water}",
         "<rdfs:comment>"         : [ "{prediction_text_en.lang('en')}", "{prediction_text_cy.lang('cy')}" ],
 # @@TODO 4: check source file referencing
         "<dct:source>"           : "<{$source_base}/{$body_slug}/input/{$filename}#line={value($row.number).format('%04d')}>",
         "<qb:dataSet>"           : [ "<{$stpDataset}>", "<{$bodyStpDataset}>" ],
         "^<def-stp:latestRiskPrediction>" : "{$bathing_water}"
       }
   ]
}