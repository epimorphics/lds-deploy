@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .
@prefix dct:   <http://purl.org/dc/terms/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix version:  <http://purl.org/linked-data/version#> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix qb:   <http://purl.org/linked-data/cube#> .
@prefix org:  <http://www.w3.org/ns/org#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .

@prefix dms: <http://www.epimorphics.com/public/vocabulary/dms#> .

@prefix : <http://localhost/dms/metadata/ref/> .

:ref a dms:DataService;
    rdfs:label "Reference"@en;
    rdfs:comment "Experimental reference data service"@en;
    skos:notation "ref";
    dms:defaultPublicationSet :production;
    dms:publicationSet :production, :dev;
    dms:notifyUser "dave@epimorphics.com";
    .

# -- Data components --------------------------------

:aims a dms:DataComponent;
    rdfs:label "AIMS data"@en;
    rdfs:comment "AIMS data"@en;
    skos:notation "aims";
    dct:isPartOf :ref;
    dms:updatePolicy dms:multiple;
    .

:bw a dms:DataComponent;
    rdfs:label "Bathing Water data"@en;
    rdfs:comment "Bathign Water data"@en;
    skos:notation "bw";
    dct:isPartOf :ref;
    dms:updatePolicy dms:multiple;
    .

:cde a dms:DataComponent;
    rdfs:label "CDE data"@en;
    rdfs:comment "CDE data"@en;
    skos:notation "cde";
    dct:isPartOf :ref;
    dms:updatePolicy dms:multiple;
    .

:meta a dms:DataComponent;
    rdfs:label "Metadata"@en;
    rdfs:comment "Dataset metadata"@en;
    skos:notation "meta";
    dct:isPartOf :ref;
    dms:updatePolicy dms:multiple;
    .

:stations a dms:DataComponent;
    rdfs:label "Stations data"@en;
    rdfs:comment "Telementry data"@en;
    skos:notation "stations";
    dct:isPartOf :ref;
    dms:updatePolicy dms:multiple;
    .

:vocab a dms:DataComponent;
    rdfs:label "Vocabularies"@en;
    rdfs:comment "Vocabularies"@en;
    skos:notation "vocab";
    dct:isPartOf :ref;
    dms:updatePolicy dms:multiple;
    .

:wims a dms:DataComponent;
    rdfs:label "WIMS data"@en;
    rdfs:comment "Water quality sampling poitndata"@en;
    skos:notation "sims";
    dct:isPartOf :ref;
    dms:updatePolicy dms:multiple;
    .

# -- Publication sets --------------------------------

:dev a dms:PublicationSet;
    rdfs:label "dev"@en;
    skos:notation "dev";
    dct:description "The publications released to the dev service."@en;
    dms:publicationTier :devPubServers;
    dms:publishAction "default/publish";
    dms:consolidatedUpdates false;
    .
    
:production a dms:PublicationSet;
    rdfs:label "Production"@en;
    skos:notation "production";
    dct:description "The publications released to the production service."@en;
    dms:publicationTier :productionPubServers;
    dms:publishAction "default/publish";
    .

# -- Tiers --------------------------------

:devPubServers a dms:Tier;
    rdfs:label "Pub servers in dev"@en;
    dct:description "Publication servers for dev service."@en;
    skos:notation "pubServers";
    dms:tierRole "pubServers";
    dms:graphEndpoint   "http://{address}:3030/ds/data";
    dms:updateEndpoint  "http://{address}:3030/ds/update";
    dms:queryEndpoint  "http://{address}:3030/ds/query";
#    dms:loadBalancer  :tpubLB;

    dms:externalState  true;
    dms:loadStateAction "ref/loadState";
    dms:catchupStateAction "generic/catchupState";
    dms:publishStateAction "ref/dupublishState";
    dms:publishAction      "generic/dupublish";

    dms:configureAction "ref/server/configure";
    dms:allocateAction "ref/server/allocate";
    dms:terminateAction "default/terminate";
    dms:parallelPublish true ;
    dms:activateAction "ref/webSyncServer";
    dms:operation :upgradeOp, :webSyncOp; ;
    .

:tpubLB a dms:LoadBalancer;
    rdfs:label "Test Pub LB"@en;
    rdfs:comment "Load balancer for the test data server tier"@en;
    # Use only the default actions
    .    

:productionPubServers a dms:Tier;
    rdfs:label "Pub servers in production"@en;
    dct:description "Publication servers for production service."@en;
    skos:notation "pubServers";
    dms:tierRole "pubServers";
    dms:graphEndpoint   "http://{address}:3030/ds/data";
    dms:updateEndpoint  "http://{address}:3030/ds/update";
    dms:queryEndpoint  "http://{address}:3030/ds/query";
    dms:loadBalancer  :ppubLB;

    dms:externalState  true;
    dms:loadStateAction "ref/loadState";
    dms:catchupStateAction "generic/catchupState";
    dms:publishStateAction "ref/dupublishState";
    dms:publishAction      "generic/dupublish";

    dms:configureAction "ref/server/configure";
    dms:allocateAction "ref/server/production/allocate";
    dms:terminateAction "default/terminate";
    dms:parallelPublish true ;
    dms:activateAction "ref/webSyncServer";
    dms:operation :upgradeOp, :webSyncOp; ;
    .

:ppubLB a dms:LoadBalancer;
    rdfs:label "Test Pub LB"@en;
    rdfs:comment "Load balancer for the test data server tier"@en;
    # Use only the default actions
    .    

:upgradeOp
    rdfs:label "Upgrade server";
    dms:action "default/upgrade";
    skos:notation "upgradeOp";
    dms:removeFromLB true;
    .

:debugOp
    rdfs:label "Debug op";
    dms:action "debug/tierOp";
    skos:notation "debugOp";
    dms:removeFromLB true;
    .

:clearCacheOp
    rdfs:label "Clear caches";
    rdfs:comment "Clear the caches for this tier";
    dms:action "ref/clearCache";
    skos:notation "clearCacheOp";
    dms:tierOnly true;
.

:webSyncOp
    rdfs:label "Web sync";
    rdfs:comment "Synchronize shared web content";
    dms:action "ref/webSync";
    skos:notation "webSyncOp";
    dms:tierOnly true;
    .
